{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as $ from \"jquery\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/core\";\nimport * as i2 from \"src/app/Service/Platform/prm-form-control.service\";\nimport * as i3 from \"src/app/Service/BusinessService/location.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"ngx-mask\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"@angular/material/icon\";\n\nfunction PrmDynamicInputComponent_mat_form_field_0_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \\\"\", ctx_r5.question.label, \"\\\" \\u00E9 \");\n  }\n}\n\nfunction PrmDynamicInputComponent_mat_form_field_0_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Formato \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"incorreto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\": o valor deve ser similar \\u00E0 \\\"\", (tmp_0_0 = ctx_r6.form.get(ctx_r6.question.key)) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.mask.requiredMask, \"\\\". \");\n  }\n}\n\nfunction PrmDynamicInputComponent_mat_form_field_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(1, \"mat-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 3);\n    i0.ɵɵlistener(\"change\", function PrmDynamicInputComponent_mat_form_field_0_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.question.onChange(ctx_r7, $event);\n    })(\"keyup\", function PrmDynamicInputComponent_mat_form_field_0_Template_input_keyup_3_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.question.onKeyUp(ctx_r9, $event);\n    })(\"keydown\", function PrmDynamicInputComponent_mat_form_field_0_Template_input_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.question.onKeyDown(ctx_r10, $event);\n    })(\"click\", function PrmDynamicInputComponent_mat_form_field_0_Template_input_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.question.onClick(ctx_r11, $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, PrmDynamicInputComponent_mat_form_field_0_mat_error_4_Template, 4, 1, \"mat-error\", 4);\n    i0.ɵɵtemplate(5, PrmDynamicInputComponent_mat_form_field_0_mat_error_5_Template, 5, 1, \"mat-error\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_9_0;\n    let tmp_10_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", ctx_r0.question.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.question.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r0.question.key)(\"id\", ctx_r0.question.key)(\"type\", ctx_r0.question.type)(\"mask\", ctx_r0.question.mask)(\"placeholder\", ctx_r0.question.placeholder);\n    i0.ɵɵattribute(\"inputmode\", ctx_r0.question.inputMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_9_0 = ctx_r0.form.get(ctx_r0.question.key)) == null ? null : tmp_9_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_10_0 = ctx_r0.form.get(ctx_r0.question.key)) == null ? null : tmp_10_0.hasError(\"mask\"));\n  }\n}\n\nfunction PrmDynamicInputComponent_mat_form_field_1_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r14 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", opt_r14.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", opt_r14.key, \" \");\n  }\n}\n\nfunction PrmDynamicInputComponent_mat_form_field_1_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \\\"\", ctx_r13.question.label, \"\\\" \\u00E9 \");\n  }\n}\n\nfunction PrmDynamicInputComponent_mat_form_field_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(1, \"mat-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 5);\n    i0.ɵɵlistener(\"change\", function PrmDynamicInputComponent_mat_form_field_1_Template_mat_select_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.question.onChange(ctx_r15, $event);\n    })(\"keyup\", function PrmDynamicInputComponent_mat_form_field_1_Template_mat_select_keyup_3_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.question.onKeyUp(ctx_r17, $event);\n    })(\"keydown\", function PrmDynamicInputComponent_mat_form_field_1_Template_mat_select_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.question.onKeyDown(ctx_r18, $event);\n    })(\"click\", function PrmDynamicInputComponent_mat_form_field_1_Template_mat_select_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.question.onClick(ctx_r19, $event);\n    });\n    i0.ɵɵtemplate(4, PrmDynamicInputComponent_mat_form_field_1_mat_option_4_Template, 2, 2, \"mat-option\", 6);\n    i0.ɵɵpipe(5, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, PrmDynamicInputComponent_mat_form_field_1_mat_error_6_Template, 4, 1, \"mat-error\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_6_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", ctx_r1.question.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.question.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r1.question.key)(\"id\", ctx_r1.question.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 7, ctx_r1.question.options));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx_r1.form.get(ctx_r1.question.key)) == null ? null : tmp_6_0.hasError(\"required\"));\n  }\n}\n\nfunction PrmDynamicInputComponent_mat_form_field_2_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \\\"\", ctx_r21.question.label, \"\\\" \\u00E9 \");\n  }\n}\n\nfunction PrmDynamicInputComponent_mat_form_field_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(1, \"mat-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 8);\n    i0.ɵɵlistener(\"change\", function PrmDynamicInputComponent_mat_form_field_2_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.question.onChange(ctx_r22, $event);\n    })(\"keyup\", function PrmDynamicInputComponent_mat_form_field_2_Template_input_keyup_3_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.question.onKeyUp(ctx_r24, $event);\n    })(\"keydown\", function PrmDynamicInputComponent_mat_form_field_2_Template_input_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.question.onKeyDown(ctx_r25, $event);\n    })(\"click\", function PrmDynamicInputComponent_mat_form_field_2_Template_input_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.question.onClick(ctx_r26, $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-datepicker-toggle\", 9);\n    i0.ɵɵelementStart(5, \"mat-icon\", 10);\n    i0.ɵɵtext(6, \"keyboard_arrow_down\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"mat-datepicker\", null, 11);\n    i0.ɵɵtemplate(9, PrmDynamicInputComponent_mat_form_field_2_mat_error_9_Template, 4, 1, \"mat-error\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r20 = i0.ɵɵreference(8);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_7_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.form);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", ctx_r2.question.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.question.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matDatepicker\", _r20)(\"formControlName\", ctx_r2.question.key)(\"id\", ctx_r2.question.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r20);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx_r2.form.get(ctx_r2.question.key)) == null ? null : tmp_7_0.hasError(\"required\"));\n  }\n}\n\nfunction PrmDynamicInputComponent_mat_form_field_3_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"obrigat\\u00F3rio!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \\\"\", ctx_r27.question.label, \"\\\" \\u00E9 \");\n  }\n}\n\nfunction PrmDynamicInputComponent_mat_form_field_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(1, \"mat-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"textarea\", 12);\n    i0.ɵɵlistener(\"change\", function PrmDynamicInputComponent_mat_form_field_3_Template_textarea_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.question.onChange(ctx_r28, $event);\n    })(\"keyup\", function PrmDynamicInputComponent_mat_form_field_3_Template_textarea_keyup_3_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.question.onKeyUp(ctx_r30, $event);\n    })(\"keydown\", function PrmDynamicInputComponent_mat_form_field_3_Template_textarea_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.question.onKeyDown(ctx_r31, $event);\n    })(\"click\", function PrmDynamicInputComponent_mat_form_field_3_Template_textarea_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.question.onClick(ctx_r32, $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, PrmDynamicInputComponent_mat_form_field_3_mat_error_4_Template, 4, 1, \"mat-error\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_6_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r3.form);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", ctx_r3.question.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.question.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r3.question.key)(\"id\", ctx_r3.question.key)(\"placeholder\", ctx_r3.question.placeholder);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx_r3.form.get(ctx_r3.question.key)) == null ? null : tmp_6_0.hasError(\"required\"));\n  }\n}\n\nfunction PrmDynamicInputComponent_form_4_app_dynamic_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-dynamic-input\", 17);\n    i0.ɵɵlistener(\"questionOutput\", function PrmDynamicInputComponent_form_4_app_dynamic_input_4_Template_app_dynamic_input_questionOutput_0_listener($event) {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return ctx_r35.onResultsBack($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const question_r34 = ctx.$implicit;\n    const ctx_r33 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"col-md-\", question_r34.size, \"\");\n    i0.ɵɵproperty(\"question\", question_r34)(\"form\", ctx_r33.form);\n  }\n}\n\nfunction PrmDynamicInputComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 13);\n    i0.ɵɵelementStart(1, \"h5\", 14);\n    i0.ɵɵelementStart(2, \"span\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, PrmDynamicInputComponent_form_4_app_dynamic_input_4_Template, 1, 5, \"app-dynamic-input\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.form);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"labelText_\", ctx_r4.question.key, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"spanText_\", ctx_r4.question.key, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.question.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.questions);\n  }\n}\n\nexport class PrmDynamicInputComponent {\n  constructor(dateAdapter, formControlServices, localService) {\n    this.dateAdapter = dateAdapter;\n    this.formControlServices = formControlServices;\n    this.localService = localService;\n    this.j$ = $;\n    this.questions = [];\n    this.qsOptions = [];\n    this.payLoad = {};\n    this.questionOutput = new EventEmitter(); // Set Datepicker location!\n\n    this.dateAdapter.setLocale('pt');\n  }\n\n  get isValid() {\n    return this.form.controls[this.question.key].valid;\n  }\n\n  ngOnInit() {\n    var _a;\n\n    if (((_a = this.question) === null || _a === void 0 ? void 0 : _a.type) == \"nestedFormGroup\") {\n      this.questions = this.question.nestedQuestions;\n      this.form = this.formControlServices.toFormGroup(this.questions);\n      this.form.valueChanges.subscribe(() => {\n        this.questionOutput.emit({\n          fmGroupName: this.question.key,\n          emitValue: this.form.value\n        });\n      });\n    } // NestedFormGroup label logic!\n\n\n    let width = $('[id^=\"spanText\"]');\n\n    if (width.length > 0) {\n      let value = width[0].offsetWidth;\n      $('[id^=\"labelText\"]').width(value);\n    }\n\n    this.question.onInputInit(this);\n  }\n\n  onResultsBack(event) {\n    let mounted = {};\n    mounted[event.fmGroupName] = event.emitValue;\n    this.form.patchValue(mounted);\n    this.payLoad = this.form.getRawValue();\n    this.questionOutput.emit({\n      fmGroupName: this.question.key,\n      emitValue: this.payLoad\n    });\n  }\n\n}\n\nPrmDynamicInputComponent.ɵfac = function PrmDynamicInputComponent_Factory(t) {\n  return new (t || PrmDynamicInputComponent)(i0.ɵɵdirectiveInject(i1.DateAdapter), i0.ɵɵdirectiveInject(i2.PrmFormControlService), i0.ɵɵdirectiveInject(i3.LocationService));\n};\n\nPrmDynamicInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PrmDynamicInputComponent,\n  selectors: [[\"app-dynamic-input\"]],\n  inputs: {\n    question: \"question\",\n    form: \"form\"\n  },\n  outputs: {\n    questionOutput: \"questionOutput\"\n  },\n  decls: 5,\n  vars: 5,\n  consts: [[\"appearance\", \"outline\", \"class\", \"w-100\", 3, \"formGroup\", 4, \"ngIf\"], [\"class\", \"w-100 outline-style row\", 3, \"formGroup\", 4, \"ngIf\"], [\"appearance\", \"outline\", 1, \"w-100\", 3, \"formGroup\"], [\"matInput\", \"\", 3, \"formControlName\", \"id\", \"type\", \"mask\", \"placeholder\", \"change\", \"keyup\", \"keydown\", \"click\"], [4, \"ngIf\"], [3, \"formControlName\", \"id\", \"change\", \"keyup\", \"keydown\", \"click\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"matInput\", \"\", 3, \"matDatepicker\", \"formControlName\", \"id\", \"change\", \"keyup\", \"keydown\", \"click\"], [\"matSuffix\", \"\", 3, \"for\"], [\"matDatepickerToggleIcon\", \"\"], [\"picker\", \"\"], [\"matInput\", \"\", 3, \"formControlName\", \"id\", \"placeholder\", \"change\", \"keyup\", \"keydown\", \"click\"], [1, \"w-100\", \"outline-style\", \"row\", 3, \"formGroup\"], [1, \"nestedFormLabel\", 3, \"id\"], [3, \"id\"], [3, \"class\", \"question\", \"form\", \"questionOutput\", 4, \"ngFor\", \"ngForOf\"], [3, \"question\", \"form\", \"questionOutput\"]],\n  template: function PrmDynamicInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PrmDynamicInputComponent_mat_form_field_0_Template, 6, 11, \"mat-form-field\", 0);\n      i0.ɵɵtemplate(1, PrmDynamicInputComponent_mat_form_field_1_Template, 7, 9, \"mat-form-field\", 0);\n      i0.ɵɵtemplate(2, PrmDynamicInputComponent_mat_form_field_2_Template, 10, 8, \"mat-form-field\", 0);\n      i0.ɵɵtemplate(3, PrmDynamicInputComponent_mat_form_field_3_Template, 5, 7, \"mat-form-field\", 0);\n      i0.ɵɵtemplate(4, PrmDynamicInputComponent_form_4_Template, 5, 5, \"form\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.question.type == \"text\" || ctx.question.type == \"number\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.question.type == \"select\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.question.type == \"datepicker\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.question.type == \"textarea\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.question.type == \"nestedFormGroup\");\n    }\n  },\n  directives: [i4.NgIf, i5.MatFormField, i6.NgControlStatusGroup, i6.FormGroupDirective, i5.MatLabel, i7.MatInput, i6.DefaultValueAccessor, i8.MaskDirective, i6.NgControlStatus, i6.FormControlName, i5.MatError, i9.MatSelect, i4.NgForOf, i1.MatOption, i10.MatDatepickerInput, i10.MatDatepickerToggle, i5.MatSuffix, i11.MatIcon, i10.MatDatepickerToggleIcon, i10.MatDatepicker, i6.ɵNgNoValidate, PrmDynamicInputComponent],\n  pipes: [i4.AsyncPipe],\n  styles: [\".outline-style[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  border: 1px solid #c4c4c4;\\n  border-radius: 6px;\\n  margin: 0px;\\n}\\n\\n.nestedFormLabel[_ngcontent-%COMP%] {\\n  font-family: Roboto, \\\" Helvetica Neue \\\", sans-serif;\\n  font-size: 18px;\\n  font-weight: 400;\\n  position: relative;\\n  transform: translateY(-1.67em);\\n  padding: 0px 10px;\\n  background-color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBybS1keW5hbWljLWlucHV0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0FBQ0o7O0FBRUE7RUFDSSxtREFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsOEJBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0FBQ0oiLCJmaWxlIjoicHJtLWR5bmFtaWMtaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIub3V0bGluZS1zdHlsZSB7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2M0YzRjNDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICAgIG1hcmdpbjogMHB4O1xyXG59XHJcblxyXG4ubmVzdGVkRm9ybUxhYmVsIHtcclxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG8sICcgSGVsdmV0aWNhIE5ldWUgJywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEuNjdlbSk7IC8vIHNjYWxlKDAuNzUpXHJcbiAgICBwYWRkaW5nOiAwcHggMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59Il19 */\"]\n});","map":{"version":3,"sources":["C:\\AngularComponents\\AngularDynamicComponents_Development\\src\\app\\Component\\Platform\\prm-dynamic-input\\prm-dynamic-input.component.ts","C:\\AngularComponents\\AngularDynamicComponents_Development\\src\\app\\Component\\Platform\\prm-dynamic-input\\prm-dynamic-input.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { PrmFormBase } from 'src/app/Model/Platform/prm-form-base';\r\n\r\nimport * as $ from \"jquery\";\r\nimport { PrmFormControlService } from 'src/app/Service/Platform/prm-form-control.service';\r\nimport { Observable } from 'rxjs';\r\nimport { LocationService } from 'src/app/Service/BusinessService/location.service';\r\n\r\n@Component({\r\n  selector: 'app-dynamic-input',\r\n  templateUrl: './prm-dynamic-input.component.html',\r\n  styleUrls: ['./prm-dynamic-input.component.scss']\r\n})\r\nexport class PrmDynamicInputComponent implements OnInit {\r\n\r\n  public j$: typeof $ = $;\r\n\r\n  questions: PrmFormBase<any>[] | null = [];\r\n  qsOptions: { key: string, value: string }[] = [];\r\n\r\n  @Input() question!: PrmFormBase<any>;\r\n  @Input() form!: FormGroup;\r\n  payLoad = {};\r\n  get isValid() { return this.form.controls[this.question.key].valid; }\r\n  @Output() questionOutput = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    private dateAdapter: DateAdapter<any>,\r\n    public formControlServices: PrmFormControlService,\r\n    public localService: LocationService\r\n  ) {\r\n    // Set Datepicker location!\r\n    this.dateAdapter.setLocale('pt');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.question?.type == \"nestedFormGroup\") {\r\n      this.questions = this.question.nestedQuestions;\r\n      this.form = this.formControlServices.toFormGroup(this.questions as PrmFormBase<string>[]);\r\n\r\n      this.form.valueChanges.subscribe(() => {\r\n        this.questionOutput.emit({ fmGroupName: this.question.key, emitValue: this.form.value });\r\n      });\r\n    }\r\n\r\n    // NestedFormGroup label logic!\r\n    let width = <any>$('[id^=\"spanText\"]');\r\n    if (width.length > 0) {\r\n      let value = <number>width[0].offsetWidth;\r\n      $('[id^=\"labelText\"]').width(value);\r\n    }\r\n\r\n    this.question.onInputInit(this);\r\n  }\r\n\r\n  onResultsBack(event: any) {\r\n    let mounted: any = {};\r\n    mounted[event.fmGroupName] = event.emitValue;\r\n    this.form.patchValue(mounted);\r\n    this.payLoad = this.form.getRawValue();\r\n    this.questionOutput.emit({ fmGroupName: this.question.key, emitValue: this.payLoad });\r\n  }\r\n\r\n}\r\n","<!-- NUMBER || TEXT -->\r\n<mat-form-field *ngIf=\"question.type == 'text' || question.type == 'number'\" [formGroup]=\"form\" appearance=\"outline\" class=\"w-100\">\r\n    <mat-label [attr.for]=\"question.key\">{{question.label}}</mat-label>\r\n    <input matInput [formControlName]=\"question.key\" [id]=\"question.key\" [type]=\"question.type\" [mask]=\"question.mask\" [placeholder]=\"question.placeholder\" (change)=\"question.onChange(this, $event)\" (keyup)=\"question.onKeyUp(this, $event)\" (keydown)=\"question.onKeyDown(this, $event)\"\r\n        (click)=\"question.onClick(this, $event)\" [attr.inputmode]=\"question.inputMode\">\r\n    <mat-error *ngIf=\"form.get(question.key)?.hasError('required')\">\r\n        \"{{question.label}}\" é <strong>obrigatório!</strong>\r\n    </mat-error>\r\n    <mat-error *ngIf=\"form.get(question.key)?.hasError('mask')\">\r\n        Formato <strong>incorreto</strong>: o valor deve ser similar à \"{{ form.get(question.key)?.errors?.mask.requiredMask }}\".\r\n    </mat-error>\r\n</mat-form-field>\r\n<!-- SELECT -->\r\n<mat-form-field *ngIf=\"question.type == 'select'\" [formGroup]=\"form\" appearance=\"outline\" class=\"w-100\">\r\n    <mat-label [attr.for]=\"question.key\"> {{question.label}} </mat-label>\r\n    <mat-select [formControlName]=\"question.key\" [id]=\"question.key\" (change)=\"question.onChange(this, $event)\" (keyup)=\"question.onKeyUp(this, $event)\" (keydown)=\"question.onKeyDown(this, $event)\" (click)=\"question.onClick(this, $event)\">\r\n        <mat-option *ngFor=\"let opt of question.options | async\" value=\"{{opt.value}}\"> {{ opt.key }} </mat-option>\r\n    </mat-select>\r\n    <mat-error *ngIf=\"form.get(question.key)?.hasError('required')\">\r\n        \"{{question.label}}\" é <strong>obrigatório!</strong>\r\n    </mat-error>\r\n</mat-form-field>\r\n<!-- DATEPICKET -->\r\n<mat-form-field *ngIf=\"question.type == 'datepicker'\" [formGroup]=\"form\" appearance=\"outline\" class=\"w-100\">\r\n    <mat-label [attr.for]=\"question.key\">{{question.label}}</mat-label>\r\n    <input matInput [matDatepicker]=\"picker\" [formControlName]=\"question.key\" [id]=\"question.key\" (change)=\"question.onChange(this, $event)\" (keyup)=\"question.onKeyUp(this, $event)\" (keydown)=\"question.onKeyDown(this, $event)\" (click)=\"question.onClick(this, $event)\">\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n        <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n    </mat-datepicker-toggle>\r\n    <mat-datepicker #picker></mat-datepicker>\r\n    <mat-error *ngIf=\"form.get(question.key)?.hasError('required')\">\r\n        \"{{question.label}}\" é <strong>obrigatório!</strong>\r\n    </mat-error>\r\n</mat-form-field>\r\n<!-- TEXTAREA -->\r\n<mat-form-field *ngIf=\"question.type == 'textarea'\" [formGroup]=\"form\" appearance=\"outline\" class=\"w-100\">\r\n    <mat-label [attr.for]=\"question.key\"> {{question.label}} </mat-label>\r\n    <textarea matInput [formControlName]=\"question.key\" [id]=\"question.key\" [placeholder]=\"question.placeholder\" (change)=\"question.onChange(this, $event)\" (keyup)=\"question.onKeyUp(this, $event)\" (keydown)=\"question.onKeyDown(this, $event)\" (click)=\"question.onClick(this, $event)\"></textarea>\r\n    <mat-error *ngIf=\"form.get(question.key)?.hasError('required')\">\r\n        \"{{question.label}}\" é <strong>obrigatório!</strong>\r\n    </mat-error>\r\n</mat-form-field>\r\n<!-- NESTED-FORMGROUP -->\r\n<form *ngIf=\"question.type == 'nestedFormGroup'\" [formGroup]=\"form\" class=\"w-100 outline-style row\">\r\n    <h5 id=\"labelText_{{ question.key }}\" class=\"nestedFormLabel\">\r\n        <span id=\"spanText_{{ question.key }}\">{{ question.label }}</span>\r\n    </h5>\r\n    <app-dynamic-input *ngFor=\"let question of questions\" class=\"col-md-{{question.size}}\" [question]=\"question\" [form]=\"form\" (questionOutput)=\"onResultsBack($event)\"></app-dynamic-input>\r\n</form>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}